---
# MongoDB Headless Service (krävs för StatefulSet)
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  clusterIP: None
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017

---
# MongoDB StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:8.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---
# Quiz Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quiz-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quiz-service
  template:
    metadata:
      labels:
        app: quiz-service
    spec:
      containers:
        - name: quiz-service
          image: melins/quiz-service:latest
          ports:
            - containerPort: 8000
          env:
            - name: QUIZ_SERVICE_PORT
              value: "8000"
            - name: QUIZ_DATABASE_URI
              value: mongodb://root:example@mongo:27017/quizdb?authSource=admin

---
# Quiz Service Service
apiVersion: v1
kind: Service
metadata:
  name: quiz-service
spec:
  selector:
    app: quiz-service
  ports:
    - port: 8000
      targetPort: 8000

---
# Result Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: result-service
  template:
    metadata:
      labels:
        app: result-service
    spec:
      containers:
        - name: result-service
          image: melins/quiz-result-service:latest
          ports:
            - containerPort: 8001
          env:
            - name: QUIZ_SUBMIT_SERVICE_PORT
              value: "8001"
            - name: QUIZ_DATABASE_URI
              value: mongodb://root:example@mongo:27017/quizdb?authSource=admin
            - name: API_GATEAWAY_URL
              value: http://api-gateway:8080/api/v1

---
# Result Service Service
apiVersion: v1
kind: Service
metadata:
  name: result-service
spec:
  selector:
    app: result-service
  ports:
    - port: 8001
      targetPort: 8001

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: melins/quiz-api-gateway:latest
          ports:
            - containerPort: 8080
          env:
            - name: API_GATEAWAY_PORT
              value: "8080"
            - name: QUIZ_BASE_URL
              value: http://quiz-service:8000
            - name: QUIZ_RESULT_BASE_URL
              value: http://result-service:8001

---
# API Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  type: LoadBalancer
  selector:
    app: api-gateway
  ports:
    - port: 8080
      targetPort: 8080

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: melins/quiz-frontend:latest
          ports:
            - containerPort: 80
          env:
            - name: VITE_API_GATEWAY_BASE_URL
              value: http://api-gateway:8080/api/v1

---
# Frontend Service (LoadBalancer)
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
